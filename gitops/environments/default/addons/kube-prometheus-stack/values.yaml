prometheusOperator:
  enabled: true
  tolerations:
  - key: "kubernetes.azure.com/scalesetpriority"
    operator: "Equal"
    value: "spot"
    effect: "NoSchedule"
  - key: "nodepool-type"
    operator: "Equal"
    value: "system"
    effect: "NoSchedule"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - elastic-operator
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nodepool-type
            operator: In
            values:
            - system
            - user
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 10
        preference:
          matchExpressions:
          - key: nodepool-type
            operator: In
            values:
            - system
      - weight: 1
        preference:
          matchExpressions:
          - key: "kubernetes.azure.com/scalesetpriority"
            operator: In
            values:
            - "spot"
  topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: nodepool-type
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: elastic-operator



prometheus:
  enabled: true
  prometheusSpec:
    replicas: 3 # (ou mais, conforme necessidade)
    tolerations:
    - key: "kubernetes.azure.com/scalesetpriority"
      operator: "Equal"
      value: "spot"
      effect: "NoSchedule"
    - key: "nodepool-type"
      operator: "Equal"
      value: "system"
      effect: "NoSchedule"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - alertmanager
            topologyKey: kubernetes.io/hostname
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodepool-type
              operator: In
              values:
              - system
              - user
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          preference:
            matchExpressions:
            - key: nodepool-type
              operator: In
              values:
              - system
        - weight: 1
          preference:
            matchExpressions:
            - key: "kubernetes.azure.com/scalesetpriority"
              operator: In
              values:
              - "spot"
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: nodepool-type
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app: alertmanager
    


alertmanager:
  enabled: true
  alertmanagerSpec:
    replicas: 3 # (ou mais, conforme necessidade)
    tolerations:
    - key: "kubernetes.azure.com/scalesetpriority"
      operator: "Equal"
      value: "spot"
      effect: "NoSchedule"
    - key: "nodepool-type"
      operator: "Equal"
      value: "system"
      effect: "NoSchedule"
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - alertmanager
            topologyKey: kubernetes.io/hostname
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: nodepool-type
              operator: In
              values:
              - system
              - user
        preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          preference:
            matchExpressions:
            - key: nodepool-type
              operator: In
              values:
              - system
        - weight: 1
          preference:
            matchExpressions:
            - key: "kubernetes.azure.com/scalesetpriority"
              operator: In
              values:
              - "spot"
    topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: nodepool-type
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app: alertmanager

grafana:
  replicas: 1
  persistence:
    enabled: true
    storageClassName: managed
    accessModes:
      - ReadWriteOnce
    size: 5Gi
  tolerations:
  - key: "kubernetes.azure.com/scalesetpriority"
    operator: "Equal"
    value: "spot"
    effect: "NoSchedule"
  - key: "nodepool-type"
    operator: "Equal"
    value: "system"
    effect: "NoSchedule"
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/name
              operator: In
              values:
              - grafana
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: nodepool-type
            operator: In
            values:
            - system
            - user
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 10
        preference:
          matchExpressions:
          - key: nodepool-type
            operator: In
            values:
            - system
      - weight: 1
        preference:
          matchExpressions:
          - key: "kubernetes.azure.com/scalesetpriority"
            operator: In
            values:
            - "spot"
  topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: nodepool-type
    whenUnsatisfiable: DoNotSchedule
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: grafana


  ingress:
    enabled: true
    ingressClassName: nginx-internal
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"  
    hosts:
      - vision.brmania.com.br
    path: /
    tls:
    - secretName: kube-prometheus-stack-tls
      hosts:
      - vision.brmania.com.br